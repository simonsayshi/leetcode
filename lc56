class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(), intervals.end(), [](const vector<int>&a, const vector<int>&b){return a[0] < b[0];});
        if(intervals.empty())
            return {};
        vector<vector<int>> res;
        for(auto const interval : intervals) {
            if(!res.empty() && interval[0] <= res.back()[1]) {
                int start = min(interval[0], res.back()[0]);
                int end = max(interval[1],res.back()[1]);
                res.pop_back();
                res.push_back({start,end});
            } else {
                res.push_back(interval);
            }
        }
        return res;
    }
};