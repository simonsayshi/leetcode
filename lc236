class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        return helper(root,p,q);    
    }

    TreeNode* helper(TreeNode*root, TreeNode* p, TreeNode* q) {
        if(!root) {
            return NULL;
        }
        
        if(root == p || root == q) {
            return root;
        }
        
        TreeNode* left = helper(root->left, p, q);
        TreeNode* right = helper(root->right, p, q);
        if(left && right) {
            return root;
        }
        if(left != NULL) {
            return left;
        }
        if(right != NULL) {
            return right;
        }
        return NULL;
    }
};