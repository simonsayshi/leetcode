class Solution {
public:
    int minDays(vector<int>& bloomDay, int m, int k) {
        int left = 0, right = *max_element(bloomDay.begin(), bloomDay.end()), mid = 0;
        while(left < right) {
            int mid = left + (right - left) / 2;
            if(makeBouquet(bloomDay, k, mid) < m) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
    
        return makeBouquet(bloomDay, k, left) >= m ? left:-1;
    }
    
    int makeBouquet(vector<int>&bloomDay, int k, int mid) {
        int res = 0, count = 0;
        for(int i = 0;i < bloomDay.size();i++) {
            if(bloomDay[i] <= mid) {
                count++;
            } else {
                count = 0;
            }
            if(count == k) {
                res++, count = 0;
            }
        }
        return res;
    }
};